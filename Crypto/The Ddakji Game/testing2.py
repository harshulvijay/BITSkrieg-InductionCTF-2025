from Crypto.Util.number import long_to_bytes
from gmpy2 import iroot
from gmpy2 import invert

def crt(C, N):
    assert len(C) == len(N)

    total = 0
    modulo = mul(N)

    for n_i, c_i in zip(N, C):
        p = modulo // n_i
        total += c_i * invert(p, n_i) * p
    return total % modulo
def mul(lst):
    ret = 1
    for n in lst:
        ret *= n
    return ret
e = 3
c1 =  227028609564243048922856480955896029073437322764611505802502565595622280105244556762566029263011026343121275740713438066698561392375864605536251670679294372537109661173128841655875018544453225221053925606444415220209134589554408201590235109942920067112345996226334404010790394788678274448323317053845303470024350881168985681989498771484930756674406108177002155107126825069675292046927443973896666261942965490919689212413873755220154646227627364106769605458021797847218022758886450102922093616613975768049310011730428340580308525834514000534303140329311230513553443438618823764559076065837725350213704304016123527680374149908425605068964743211552312386459397610330001964515643567445291873834840902794100820563663465634887240039303010516360863585309722708439601354102367295151642259747164101843014057121121383963728645468768204563529867359014396983344787514791439703036949032629807039793297351193894804117211802697592906249169
c2 =  614328559007900838014036768914109187954178320312550074667423436475192976800230003899553924389357239949836893822181206710121875033030849797359181925520524464991118539623937520216185210112594099823804276342418817241958760614124763066063592055688473103379781305319703338433324172053461093911707942738295995402460426822425403623988778637128674895003254627899172696659993133850377770399854084459895631406924529422428133901739343491730263121739419789757231420696455178505804145015861581690023378097477939077899341518854033234323655585075325819611818102539804851012751780720565789040024035145247141040586671595709232719808419291553840254761675955567108798753996848974410532461261524245791409397384549533304685093778795404451607940616416085334184179768964397225540006165115058560195674070304007738532342728152640148056070597232089313216193643473411103021052601890101695642666749152164347054515381445010628045746106083203082107242620
c3 =  3139350873456717268058150172186553751886944157915947235051193558120055266779515883696835262859112478212723535422890579868120345823125709664637411540359558475884488534122007435125008360210169006421132541176130338983061796622561125873342745992108046133103941229993604086347335887519564216063141429571306648687266591134016405985880375191804647990244894378074551698844584210916513268019274074889673820892035454404661323038615384529792795698774979002339779715553851097915662020798780976397275405034349817220064733507623103013325464494004565192780653420933279075004105593388116011883282598352182567923799523959047709627947548999160176810658497577442460503517539860358884109623161758885780275694943320840512901978800482466457058473660255433419654991840601874985956831616734245642310761535361746819828709823611731218333184666620661420289433641526765834818962850700007514696844988541366671450533663859576000497201436459355495934023351
n1 =  3267293418836930853348984036455111894516721103103256145335033609646324221896505794199399613115377008937464862384346507561042898074826835743004421153604421470960778638092913165825320651279388245981981432049018334256278953905687018554837829487682599712001063265870626785836672005792061746711311067013377286864215000143150547742490181530638829727577522599828231204837493976831893665616889470264488102105373604269086146737855639757218133988685756730777854853220810176244995909712071724255736947228637593894711025752154297892905325219772694855433370811340818974689969330687220998503929294949978082476789004443865635200496336272791261526004433692734367839996489275541143014471745613040158125472298898443552676023097764114860371402068182030159601440615188521463277344507966381672290499888964132135600926328839385927711553425970753952136788151907894033573289646952849773732917151117475530304812262108259554206003334243609469905789977
n2 =  2263768881227994325540258851872448754458315639999330347558268944930867751682170378028049764699130162769825141493983325795461707974502096710148177571415953006220642014357583237447530302825242377676652180569949500586904769638466926328740359566181829623841354174497843442004919054354617891938717482523199165987859578802775008073154991402154377845965469512615613579070915055637503517021158123680108014570585952402218250236433622134800308862634944528823112931883870384713164248425277349481392753196746098900398144794183707428239467521036089014846593858448367023138443766631272296834896524920743602967809758731171468811636377641784775859028401574480478895053019023700454383043086282230364511280304397967899786172744740686577323281989124058428966202830515681406896918505747121862842987410206325117061414563653182720522690940984065830319160366480827694704802554894591292131368648776197926768472399456294302410232572043276216108215463
n3 =  4342117180242440283631451136882740192192960010066277727888982628393372336057464045664239021956063975176210340581433862771113688824592490174192336639793293734935016305891273277606750085773994028501968276908481092493922814056487364783341207231430069507848266519912672060617871470860255741849535938678410863888828772601716905406655117689499801297968822165523941047604220496031116602644965791556319326435468258515650110898805598872137574436291643905117669854223587805442385460542413494977237304090235890664834691257154949569021363660159316463919804751743017695116739403781458666223905616414816717100572545791731835489762720956655859336276958025616511992543461184054977988762700568460984869368043061510627229122319124664362511860073889836695286195751386281511864747978536134325879972594615195820814659011607789244211101804188430498216154989704825091607607260503455041115697889116511675274820299872710738597673528454209522716717037
def third_root(n):
    m, valid = iroot(n, e)
    if valid:
        print("Cleartext :", long_to_bytes(m))
    else:
        print("Unable to find the third root of :", n)

C = [c1, c2,c3]
N = [n1, n2,n3]

for c in C:
    third_root(c)

x = crt(C, N)
third_root(x)